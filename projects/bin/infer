#!/usr/bin/env python

from semantic_selector import ml_model
from semantic_selector import preprocessor
from semantic_selector import datasource

def main():
    # training data is now auto loaded during LsiModel initialization 
    model = ml_model.LsiModel()
    input_tabs = datasource.InputTabs()
    test_records = input_tabs.fetch_all('test_inputs')

    hit = 0
    login_e_cnt = 0
    login_c_cnt = 0
    login_ec_cnt = 0
    password_e_cnt = 0
    password_c_cnt = 0
    password_ec_cnt = 0
    for t in test_records:
        target_tag = t['html']
        estimated_label = preprocessor.to_label(model.inference(target_tag))
        correct_label = t['label']
        print("test tag:", t['html'])
        print("estimated, correct:", estimated_label, correct_label)

        if estimated_label == correct_label:
            hit += 1

        if estimated_label == 'login_id':
            login_e_cnt +=1
        if correct_label == 'login_id':
            login_c_cnt += 1
        if estimated_label == 'login_id' and correct_label == 'login_id':
            login_ec_cnt += 1

        if estimated_label == 'password':
            password_e_cnt +=1
        if correct_label == 'password':
            password_c_cnt += 1
        if estimated_label == 'password' and correct_label == 'password':
            password_ec_cnt += 1

    print("\nEvaluation")
    print("Precision(login): ", (login_ec_cnt / login_e_cnt))
    print("Recall(login): ", (login_ec_cnt / login_c_cnt))
    print("Precision(password): ", (password_ec_cnt / password_e_cnt))
    print("Recall(password): ", (password_ec_cnt / password_c_cnt))
    print("Total Accuracy: ", (hit / len(test_records)))

    datasource.InputTabs.cleanup()


if __name__ == '__main__':
    main()
